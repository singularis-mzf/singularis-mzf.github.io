<!doctype html>
<html lang="cs">
<head profile="http://www.w3.org/2005/10/profile">
<meta charset="UTF-8">

<title>GNU make − Linux: Kniha kouzel</title>

<link rel="stylesheet" type="text/css" href="lkk-20200222.css">
<link rel="alternate stylesheet" type="text/css" href="lkk-20200222-vk-svetly.css" title="Vysoký kontrast: světlá varianta">
<link rel="alternate stylesheet" type="text/css" href="lkk-20200222-vk-tmavy.css" title="Vysoký kontrast: tmavá varianta">
<link rel="alternate stylesheet" type="text/css" href="lkk-20200222-tmavy.css" title="Tmavý motiv">
<link rel="icon" type="image/png" href="obrazky/favicon.png">
</head>
<body id="nahore">
<header>
<span class="left"><a href="index.htm"><img src="obrazky/favicon.png" width="16" height="16" alt=""></a> Linux: Kniha kouzel, vanilková příchuť 1.4 (22. února 2020)</span>
<span class="right"><span class="ico1"></span><span class="ico2"></span><span class="ico3"></span></span>
</header>


<nav class="horni">
<div class="slogan">Veškerá moc příkazové řádky/příkazového řádku přehledně, pro začátečníky i&nbsp;pokročilé</div>
<span class="prev">
<a href="git.htm" rel="prev" title="6. Git" accesskey="p">Předchozí&nbsp;kapitola</a>&nbsp;|
</span><a href="index.htm" accesskey="i">Přehled</a><span class="next"><!--
-->&nbsp;| <a href="markdown.htm" rel="next" title="8. Markdown" accesskey="n">Následující&nbsp;kapitola</a>
</span>
</nav>


<article>

<h1 class="kapitola">7. <img src="obrazky/ik-vychozi.png" alt="" width="64" height="64"> GNU make</h1>
<div class="stitky"><a href="x-stitky.htm#sprogrm">program</a>
<a href="x-stitky.htm#sprogrmovn">programování</a>
</div><div class="rozcestnikkapitol">
<a href="#cast1" class="sekce">Úvod</a><span class="oddelovac">&nbsp;|</span>
<a href="#cast2" class="sekce">Definice</a><br>
<a href="#cast3" class="sekce">Zaklínadla (v souboru Makefile)</a>: <a href="#cast3x1">Nastavení proměnných</a><span class="oddelovac">&nbsp;|</span>
<a href="#cast3x2">Rozvoj proměnných</a><span class="oddelovac">&nbsp;|</span>
<a href="#cast3x3">Automatické a předdefinované proměnné</a><span class="oddelovac">&nbsp;|</span>
<a href="#cast3x4">Obecný tvar pravidel</a><span class="oddelovac">&nbsp;|</span>
<a href="#cast3x5">Textové funkce</a><span class="oddelovac">&nbsp;|</span>
<a href="#cast3x6">Analýza adresářových cest (pro každé slovo zvlášť)</a><span class="oddelovac">&nbsp;|</span>
<a href="#cast3x7">Příkazy v pravidlech</a><span class="oddelovac">&nbsp;|</span>
<a href="#cast3x8">Logické funkce</a><span class="oddelovac">&nbsp;|</span>
<a href="#cast3x9">Podmíněný překlad a include</a><span class="oddelovac">&nbsp;|</span>
<a href="#cast3x10">Ostatní funkce</a><br>
<a href="#cast4" class="sekce">Parametry příkazů</a><span class="oddelovac">&nbsp;|</span>
<a href="#cast5" class="sekce">Instalace na Ubuntu</a><span class="oddelovac">&nbsp;|</span>
<a href="#cast6" class="sekce">Ukázka</a><span class="oddelovac">&nbsp;|</span>
<a href="#cast7" class="sekce">Tipy a zkušenosti</a><span class="oddelovac">&nbsp;|</span>
<a href="#cast8" class="sekce">Další zdroje informací</a><span class="oddelovac">&nbsp;|</span>
<a href="#cast9" class="sekce">Snímek obrazovky</a></div>
<h2><a href="#cast1" id="cast1"><span class="cislo">1.</span> Úvod</a></h2>
<p class="ponadpisu">
GNU make je nástroj k automatizaci procesu sestavování určitých cílových souborů ze souborů zdrojových. Vykonává podobnou úlohu jako např. skript napsaný v bashi, ale na rozdíl od něj umí:
</p>
<ul class="kompaktni"><li>Kompilovat pouze ty části programu, které jsou potřeba (jejichž cílové soubory neexistují nebo se jejich zdrojové soubory změnily).
</li><li>Spouštět procesy paralelně, aniž by to narušilo definované závislosti.
</li></ul><p>
Vztahy mezi zdrojovými a cílovými soubory a kompilační příkazy jsou popsány
v tzv. Makefilu (souboru jménem „Makefile“),
jemuž se bude věnovat většina této kapitoly.
</p>

<h2><a href="#cast2" id="cast2"><span class="cislo">2.</span> Definice</a></h2>
<ul><li><b>Pravidlo</b> je definice v Makefilu, která instruuje program make, na kterých dalších souborech určitý soubor závisí a jakými příkazy jej z nich vytvořit či aktualizovat.
</li><li><b>Cíl</b> je název souboru k vytvoření či akce k vykonání.
</li><li><b>Zdroj</b> (často nazýváný „závislost“) je název souboru, na kterém určitý cíl závisí. Příkazy stanovené pravidlem se vykonají jen tehdy, pokud cíl neexistuje nebo je alespoň jeden jeho z jeho zdrojů novější. (Vychází se z času poslední změny souborů.) Zdrojem může být také název akce.
</li><li><b>Slovo</b> je posloupnost nebílých znaků v řetězci. Jednotlivá slova v řetězci jsou od sebe oddělena bílými znaky, nejčastěji jednotlivou mezerou.
</li><li><b>%-vzor</b> je řetězec sloužící k filtrování, vyhledávání a nahrazování slov. Jde o velice praktickou věc. Může obsahovat nejvýše jeden znak <b>%</b>, který slouží jako náhrada za libovolné množství znaků (včetně lomítek oddělujících adresáře). (Např. %-vzoru <b>a%</b> odpovídají právě ta slova, která začínají malým písmenem <b>a</b>.) Slouží-li %-vzor k záměně, slova, která mu neodpovídají, projdou záměnou nezměněna. %-vzor nemusí obsahovat znak %; v takovém případě mu odpovídají pouze slova, která se s ním přesně shodují.
</li></ul>
<h2><a href="#cast3" id="cast3"><span class="cislo">3.</span> Zaklínadla (v souboru Makefile)</a></h2>

<h3><a href="#cast3x1" id="cast3x1"><span class="cislo">1</span> Nastavení proměnných</a></h3>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#1 </span><span class="D">≠</span><b>nastavit</b> proměnnou (expandovat v místě definice)</div><div class="radky">
<div class="radekzaklinadla"><i class="dopln">NÁZEV_PROMĚNNÉ</i> := <i class="dopln">hodnota včetně mezer</i></div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#2 </span><span class="D">•</span><b>připojit</b> obsah na konec proměnné (expanze stejně jako v původní definici)</div><div class="radky">
<div class="radekzaklinadla"><i class="dopln">NÁZEV_PROMĚNNÉ</i> += <i class="dopln">hodnota včetně mezer</i></div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#3 </span><span class="D">≘</span><b>nastavit</b> proměnnou (expandovat v každém místě použití)</div><div class="radky">
<div class="radekzaklinadla"><i class="dopln">NÁZEV_PROMĚNNÉ</i> = <i class="dopln">hodnota včetně mezer</i></div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#4 </span><span class="D">ະ</span>přiřadit do proměnné mezeru (trik)</div><div class="radky">
<div class="radekzaklinadla">PRAZDNA :=</div>
<div class="radekzaklinadla"><i class="dopln">NÁZEV_PROMĚNNÉ</i> := $(PRAZDNA)<span class="viditelnamezera">&nbsp;</span>$(PRAZDNA)</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#5 </span><span class="D">☁</span>nastavit/připojit víceřádkový obsah<sup><a href="#kapmakeppc1" id="kapmakeppcr1" title="„endef“ musí být na samostatném řádku; operátor může být „=“, „:=“ nebo „+=“.">(1)</a></sup></div><div class="radky">
<div class="radekzaklinadla">define <i class="dopln">NÁZEV_PROMĚNNÉ</i> <span class="volznak">[</span><i class="dopln">operátor</i><span class="volznak">]</span></div>
<div class="radekzaklinadla"><i class="dopln">víceřádkový obsah</i></div>
<div class="radekzaklinadla">endef</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#6 </span><span class="D">⪈</span>nastavit <b>proměnnou prostředí</b> pro všechny podprocesy</div><div class="radky">
<div class="radekzaklinadla">export <i class="dopln">NÁZEV_PROMĚNNÉ</i> := <i class="dopln">hodnota včetně mezer</i></div>
</div></div>

<h3><a href="#cast3x2" id="cast3x2"><span class="cislo">2</span> Rozvoj proměnných</a></h3>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#1 </span><span class="D">♩</span>rozvinout proměnnou</div><div class="radky">
<div class="radekzaklinadla">$(<i class="dopln">NÁZEV_PROMĚNNÉ</i>)</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#2 </span><span class="D">⡮</span>při rozvinutí proměnné nahradit v každém slově prefix/suffix/obojí<sup><a href="#kapmakeppc2" id="kapmakeppcr2" title="Třetí uvedená varianta provede náhradu jen ve slovech, kde odpovídá prefix i suffix. Slova, u kterých odpovídá jen prefix nebo jen suffix, projdou bez náhrady.">(2)</a></sup></div><div class="radky">
<div class="radekzaklinadla">$(<i class="dopln">NÁZEV_PROMĚNNÉ</i>:<span class="volznak">[</span><i class="dopln">původní-prefix</i><span class="volznak">]</span>%=<span class="volznak">[</span><i class="dopln">nový-prefix</i><span class="volznak">]</span>%)</div>
<div class="radekzaklinadla">$(<i class="dopln">NÁZEV_PROMĚNNÉ</i>:%<span class="volznak">[</span><i class="dopln">původní-suffix</i><span class="volznak">]</span>=%<span class="volznak">[</span><i class="dopln">nový-suffix</i><span class="volznak">]</span>)</div>
<div class="radekzaklinadla">$(<i class="dopln">NÁZEV_PROMĚNNÉ</i>:<span class="volznak">[</span><i class="dopln">původní-prefix</i><span class="volznak">]</span>%<span class="volznak">[</span><i class="dopln">původní-suffix</i><span class="volznak">]</span>=<span class="volznak">[</span><i class="dopln">nový-prefix</i><span class="volznak">]</span>%<span class="volznak">[</span><i class="dopln">nový-suffix</i><span class="volznak">]</span>)</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#3 </span><span class="D">☡</span>rozvinout <b>proměnnou prostředí</b> či příkazového interpretu (ne proměnnou Makefilu)(alternativy)</div><div class="radky">
<div class="radekzaklinadla">$$<i class="dopln">NÁZEV_PROMĚNNÉ</i></div>
<div class="radekzaklinadla">$${<i class="dopln">NÁZEV_PROMĚNNÉ</i>}</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#4 </span><span class="D">䷞</span>rozvinout proměnnou, jejíž název je uložený v jiné proměnné</div><div class="radky">
<div class="radekzaklinadla">$($(<i class="dopln">NÁZEV_PROMĚNNÉ</i>))</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#5 </span><span class="D">⏎</span>příklad záměny při rozvoji − vypíše: bbeceda.cpp hlavicka.h bbakus.cpp ostatni.cc</div><div class="radky">
<div class="radekzaklinadla">TEST := abeceda.cc hlavicka.h abakus.cc ostatni.cc</div>
<div class="radekzaklinadla">all:</div>
<div class="radekzaklinadla"><span class="tab" style="width:8ch">&#9;</span>@echo $(TEST:a%.cc=b%.cpp)</div>
</div></div>

<h3><a href="#cast3x3" id="cast3x3"><span class="cislo">3</span> Automatické a předdefinované proměnné</a></h3>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#1 </span><span class="D">≤</span><b>cíl</b> pravidla (alternativy)</div><div class="radky">
<div class="radekzaklinadla">$@</div>
<div class="radekzaklinadla">$(@)</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#2 </span><span class="D">⋾</span><b>první zdroj</b> pravidla (alternativy)</div><div class="radky">
<div class="radekzaklinadla">$&lt;</div>
<div class="radekzaklinadla">$(&lt;)</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#3 </span><span class="D">└</span><b>všechny zdroje</b> (alternativy)</div><div class="radky">
<div class="radekzaklinadla">$^</div>
<div class="radekzaklinadla">$(^)</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#4 </span><span class="D">ⵝ</span>mazání souborů (typicky „rm -f“)</div><div class="radky">
<div class="radekzaklinadla">$(RM)</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#5 </span><span class="D">‗</span>program make</div><div class="radky">
<div class="radekzaklinadla">$(MAKE)</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#6 </span><span class="D">ດ</span>v generovaném a implicitním pravidle posloupnost znaků odpovídající znaku % v %-vzoru cíle</div><div class="radky">
<div class="radekzaklinadla"><a href="#" class="reseninezname" title="Řešení tohoto příkladu nebylo při vydání této verze kapitoly známo.">?</a></div>
</div></div>

<h3><a href="#cast3x4" id="cast3x4"><span class="cislo">4</span> Obecný tvar pravidel</a></h3>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#1 </span><span class="D">☷</span>normální (<b>pevné</b>) pravidlo</div><div class="radky">
<div class="radekzaklinadla"><i class="dopln">cíle oddělené mezerami</i>: <span class="volznak">[</span><i class="dopln">zdroje oddělené mezerami</i><span class="volznak">]</span> <span class="volznak">[</span>;<i class="dopln">příkaz</i><span class="volznak">]</span></div>
<div class="radekzaklinadla"><span class="volznak">[</span><span class="tab" style="width:8ch">&#9;</span><span class="volznak">[</span><i class="dopln">prefix-příkazu</i><span class="volznak">]</span><i class="dopln">příkaz</i><span class="volznak">]</span><span class="tritecky"></span></div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#2 </span><span class="D">ʖ</span>zobecněné (<b>generované</b>) pravidlo (zdroje lze odvodit od cíle)</div><div class="radky">
<div class="radekzaklinadla"><i class="dopln">cíle oddělené mezerami</i>: <i class="dopln">%-vzor-pro-cíle</i>: <i class="dopln">cesta-nebo-%-vzor-zdroje</i><span class="tritecky"></span> <span class="volznak">[</span>;<i class="dopln">příkaz</i><span class="volznak">]</span></div>
<div class="radekzaklinadla"><span class="volznak">[</span><span class="tab" style="width:8ch">&#9;</span><span class="volznak">[</span><i class="dopln">prefix-příkazu</i><span class="volznak">]</span><i class="dopln">příkaz</i><span class="volznak">]</span><span class="tritecky"></span></div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#3 </span><span class="D">⢍</span>obecné (<b>implicitní</b>) pravidlo (zdroje lze odvodit od cíle)<sup><a href="#kapmakeppc3" id="kapmakeppcr3" title="Obecné pravidlo má nižší prioritu než všechna pevná a generovaná pravidla. Navíc je tiše ignorováno, pokud chybí nekterý ze zdrojů. Má-li uvedeno víc cílů, považují se po jeho provedení všechny uvedené cíle za vygenerované, a tedy se pravidlo nevolá pro překlad dalších zdrojů znovu.">(3)</a></sup></div><div class="radky">
<div class="radekzaklinadla"><i class="dopln">%-vzor cíle</i><span class="tritecky"></span>: <i class="dopln">cesta-nebo-%-vzor-zdroje</i><span class="tritecky"></span> <span class="volznak">[</span>;<i class="dopln">příkaz</i><span class="volznak">]</span></div>
<div class="radekzaklinadla"><span class="volznak">[</span><span class="tab" style="width:8ch">&#9;</span><span class="volznak">[</span><i class="dopln">prefix-příkazu</i><span class="volznak">]</span><i class="dopln">příkaz</i><span class="volznak">]</span><span class="tritecky"></span></div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#4 </span><span class="D">◂</span>označit, že určité cíle jsou <b>akce</b>, ne soubory</div><div class="radky">
<div class="radekzaklinadla">.PHONY: <span class="volznak">[</span><i class="dopln">akce oddělené mezerami</i><span class="volznak">]</span></div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#5 </span><span class="D">ᚈ</span>přeložit soubory uvedené v proměnné ZDROJE, které se nacházejí v adresáři „kod“ a jeho podadresářích a mají příponu „.cc“, na objektové soubory do adresáře obj<sup><a href="#kapmakeppc4" id="kapmakeppcr4" title="Uvedený příklad předpokládá předdefinované proměnné CXX a CXXFLAGS, které GNU make předdefinovává, takže je nemusíte sami nastavovat.">(4)</a></sup></div><div class="radky">
<div class="radekzaklinadla">$(patsubst kod/%.cc,obj/%.o,$(filter kod/%.cc,$(ZDROJE))): obj/%.o: kod/%.cc</div>
<div class="radekzaklinadla"><span class="tab" style="width:8ch">&#9;</span>$(CXX) $(CXXFLAGS) -c -o $@ $&lt;</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#6 </span><span class="D">໘</span>cíl závisí na zdroji, jen pokud zdroj existuje (<b>nepovinný zdroj</b>)<sup><a href="#kapmakeppc5" id="kapmakeppcr5" title="Poznámka: nepovinné zdroje se zadávají jako vzorky interpretu oddělené mezerami, což znamená, že „?“, „*“ a „<span class="viditelnamezera">&nbsp;</span>“ jsou v nich znaky se speciální významem.">(5)</a></sup></div><div class="radky">
<div class="radekzaklinadla"><i class="dopln">cíle oddělené mezerami</i>: $(wildcard <i class="dopln">nepovinný-zdroj</i><span class="tritecky"></span>)</div>
<div class="radekzaklinadla"><span class="volznak">[</span><span class="tab" style="width:8ch">&#9;</span><span class="volznak">[</span><i class="dopln">prefix-příkazu</i><span class="volznak">]</span><i class="dopln">příkaz</i><span class="volznak">]</span><span class="tritecky"></span></div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#7 </span><span class="D">ຢ</span>v případě chyby odstranit cílový soubor</div><div class="radky">
<div class="radekzaklinadla">.DELETE_ON_ERROR: <i class="dopln">cíl</i> <span class="volznak">[</span><i class="dopln">další-cíl</i><span class="volznak">]</span><span class="tritecky"></span></div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#8 </span><span class="D">▓</span>v případě chyby pokračovat dál, jako by nenastala</div><div class="radky">
<div class="radekzaklinadla">.IGNORE: <i class="dopln">cíl</i> <span class="volznak">[</span><i class="dopln">další-cíl</i><span class="volznak">]</span><span class="tritecky"></span></div>
</div></div>

<h3><a href="#cast3x5" id="cast3x5"><span class="cislo">5</span> Textové funkce</a></h3>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#1 </span><span class="D">┐</span><b>připojit</b> text před/za každé slovo v řetězci/v rozvoji proměnné<sup><a href="#kapmakeppc6" id="kapmakeppcr6" title="Při použití poslední uvedené varianty nesmějí text-před a text-za obsahovat znak %.">(6)</a></sup></div><div class="radky">
<div class="radekzaklinadla">$(addprefix <i class="dopln">text-před</i>,<i class="dopln">řetězec slov</i>)</div>
<div class="radekzaklinadla">$(addsuffix <i class="dopln">text-za</i>,<i class="dopln">řetězec slov</i>)</div>
<div class="radekzaklinadla">$(<i class="dopln">proměnná</i>:%=<i class="dopln">text-před</i>%<i class="dopln">text-za</i>)</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#2 </span><span class="D">⟻</span>provést <b>náhradu</b> (záměnu) ve slovech pomocí %-vzoru</div><div class="radky">
<div class="radekzaklinadla">$(patsubst <i class="dopln">co-nahradit-%-vzor</i>,<i class="dopln">čím-nahradit-%-vzor</i>,<i class="dopln">řetězec slov</i>)</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#3 </span><span class="D">∹</span><b>vybrat</b> slova odpovídající/neodpovídající kterémukoliv ze zadaných %-vzorů</div><div class="radky">
<div class="radekzaklinadla">$(filter <i class="dopln">%-vzory oddělené mezerou</i><span class="tritecky"></span>,<i class="dopln">řetězec slov</i>)</div>
<div class="radekzaklinadla">$(filter-out <i class="dopln">%-vzory oddělené mezerou</i><span class="tritecky"></span>,<i class="dopln">řetězec slov</i>)</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#4 </span><span class="D">◣</span><b>nahradit</b> všechny výskyty podřetězce</div><div class="radky">
<div class="radekzaklinadla">$(subst <i class="dopln">co nahradit</i>,<i class="dopln">čím nahradit</i>,<i class="dopln">původní text</i>)</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#5 </span><span class="D">䷅</span>normalizovat <b>bílé znaky</b> (posloupnosti nahradit jednou mezerou, na začátku a konci odstranit)</div><div class="radky">
<div class="radekzaklinadla">$(strip <i class="dopln">řetězec</i>)</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#6 </span><span class="D">⢴</span>získat <b>počet slov</b> v řetězci</div><div class="radky">
<div class="radekzaklinadla">$(words <i class="dopln">řetězec</i>)</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#7 </span><span class="D">⣛</span>první/poslední/n-té slovo z řetězce</div><div class="radky">
<div class="radekzaklinadla">$(firstword <i class="dopln">řetězec</i>)</div>
<div class="radekzaklinadla">$(lastword <i class="dopln">řetězec</i>)</div>
<div class="radekzaklinadla">$(word <i class="dopln">n</i>,<i class="dopln">řetězec</i>)</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#8 </span><span class="D">≯</span>předposlední/před-předposlední slovo z řetězce</div><div class="radky">
<div class="radekzaklinadla">$(if $(word 2,<i class="dopln">řetězec</i>),$(word $(shell expr $(words <i class="dopln">řetězec</i> ) - 1),<i class="dopln">řetězec</i>),)</div>
<div class="radekzaklinadla">$(if $(word 3,<i class="dopln">řetězec</i>),$(word $(shell expr $(words <i class="dopln">řetězec</i> ) - 2),<i class="dopln">řetězec</i>),)</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#9 </span><span class="D">⡟</span><b>seřadit</b> slova a odstranit duplicity</div><div class="radky">
<div class="radekzaklinadla">$(sort <i class="dopln">řetězec</i>)</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#10 </span><span class="D">⢹</span>obrátit pořadí slov v řetězci</div><div class="radky">
<div class="radekzaklinadla">$(shell printf %s\\n '$(strip <i class="dopln">řetězec slov</i>)' | tr '<span class="viditelnamezera">&nbsp;</span>' \\n | tac)</div>
</div></div>

<h3><a href="#cast3x6" id="cast3x6"><span class="cislo">6</span> Analýza adresářových cest (pro každé slovo zvlášť)</a></h3>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#1 </span><span class="D">⋥</span>získat <b>adresářovou cestu</b> (např. „../a/“)<sup><a href="#kapmakeppc7" id="kapmakeppcr7" title="Neobsahuje-li slovo žádné „/“, vrací pro něj $(dir) „./“.">(7)</a></sup></div><div class="radky">
<div class="radekzaklinadla">$(dir <i class="dopln">řetězec slov</i>)</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#2 </span><span class="D">➦</span>získat samotný <b>název souboru</b> včetně přípony/bez přípony (např. „b.o“, resp. „b“)</div><div class="radky">
<div class="radekzaklinadla">$(notdir <i class="dopln">řetězec slov</i>)</div>
<div class="radekzaklinadla">$(basename $(notdir <i class="dopln">řetězec slov</i>))</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#3 </span><span class="D">⤇</span>získat <b>příponu</b> souboru (např. „.o“)<sup><a href="#kapmakeppc8" id="kapmakeppcr8" title="Pozor! Slova, která takovou příponu neobsahují, budou touto funkcí vynechána bez náhrady, což sníží počet slov ve výsledném řetězci.">(8)</a></sup></div><div class="radky">
<div class="radekzaklinadla">$(suffix <i class="dopln">řetězec slov</i>)</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#4 </span><span class="D">☸</span>získat adresářovou cestu (je-li uvedena) + název souboru bez přípony (např. „../a/b“)</div><div class="radky">
<div class="radekzaklinadla">$(basename <i class="dopln">řetězec slov</i>)</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#5 </span><span class="D">❴</span>získat úplnou kanonickou cestu existujících souborů a adresářů (např. „/home/elli/test/a/b.o“)</div><div class="radky">
<div class="radekzaklinadla">$(realpath <i class="dopln">řetězec slov</i>)</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#6 </span><span class="D">ຄ</span>získat seznam existujících souborů a adresářů odpovídajících vzorku interpretu<sup><a href="#kapmakeppc9" id="kapmakeppcr9" title="Vzorek příkazového interpretu může obsahovat znaky ? a * s významem obvyklým v bashi. Pokud vzorku neodpovídá žádný soubor ani adresář, vzorek se potichu přeskočí. Toho je možno použít k vynechání neexistujících souborů z proměnné.">(9)</a></sup></div><div class="radky">
<div class="radekzaklinadla">$(wildcard <i class="dopln">vzorek</i><span class="tritecky"></span>)</div>
</div></div>

<h3><a href="#cast3x7" id="cast3x7"><span class="cislo">7</span> Příkazy v pravidlech</a></h3>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#1 </span><span class="D">⇔</span>vykonat příkaz <b>bez vypsání</b></div><div class="radky">
<div class="radekzaklinadla"><span class="tab" style="width:8ch">&#9;</span>@<i class="dopln">příkaz</i></div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#2 </span><span class="D">⇐</span>vykonat příkaz a ignorovat návratovou hodnotu</div><div class="radky">
<div class="radekzaklinadla"><span class="tab" style="width:8ch">&#9;</span>-<i class="dopln">příkaz</i></div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#3 </span><span class="D">⠘</span>u určitých cílů <b>nevypisovat</b> příkazy před vykonáním</div><div class="radky">
<div class="radekzaklinadla">.SILENT: <i class="dopln">cíl</i> <span class="volznak">[</span><i class="dopln">další-cíl</i><span class="volznak">]</span><span class="tritecky"></span></div>
</div></div>

<h3><a href="#cast3x8" id="cast3x8"><span class="cislo">8</span> Logické funkce</a></h3>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#1 </span><span class="D">⟾</span>podmíněný výraz</div><div class="radky">
<div class="radekzaklinadla">$(if <i class="dopln">podmínkový řetězec</i>,<i class="dopln">je-li neprázdný</i><span class="volznak">[</span>,<i class="dopln">jinak</i><span class="volznak">]</span>)</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#2 </span><span class="D">⁂</span>získat první neprázdný řetězec</div><div class="radky">
<div class="radekzaklinadla">$(or <i class="dopln">řetězec</i><span class="volznak">[</span>,<i class="dopln">další řetězec</i><span class="volznak">]</span><span class="tritecky"></span>)</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#3 </span><span class="D">⡮</span>získat první prázdný řetězec, nebo jsou-li všechny neprázdné, poslední z nich</div><div class="radky">
<div class="radekzaklinadla">$(and <i class="dopln">řetězec</i><span class="volznak">[</span>,<i class="dopln">další řetězec</i><span class="volznak">]</span><span class="tritecky"></span>)</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#4 </span><span class="D">ຊ</span>pro každé slovo ze seznamu toto slovo nastavit do proměnné a rozvinout podvýraz</div><div class="radky">
<div class="radekzaklinadla">$(foreach <i class="dopln">proměnná</i>,<i class="dopln">seznam</i>,<i class="dopln">podvýraz</i>)</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#5 </span><span class="D">⛃</span>vrátí podřetězec, pokud se vyskytuje v řetězci; jinak vrátí prázdný řetězec</div><div class="radky">
<div class="radekzaklinadla">$(findstring <i class="dopln">podřetězec</i>,<i class="dopln">řetězec</i>)</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#6 </span><span class="D">▢</span>příklad − vrátí: aa bb cc cc bb aa</div><div class="radky">
<div class="radekzaklinadla">$(foreach PROM,a b c c b a,$(PROM)$(PROM))</div>
</div></div>

<h3><a href="#cast3x9" id="cast3x9"><span class="cislo">9</span> Podmíněný překlad a include</a></h3>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#1 </span><span class="D">⋬</span>podmíněný překlad<sup><a href="#kapmakeppc10" id="kapmakeppcr10" title="Vybere první z alternativ, kde jsou si uvedené výrazy po rozvinutí rovny. Doporučuji alternativy v Makefilu odsadit, ale není to vyžadováno.">(10)</a></sup></div><div class="radky">
<div class="radekzaklinadla">ifeq &quot;<i class="dopln">výraz 1</i>&quot; &quot;<i class="dopln">výraz 2</i>&quot;</div>
<div class="radekzaklinadla" style="padding-left:2ch;"><i class="dopln">první alternativa</i></div>
<div class="radekzaklinadla"><span class="volznak">[</span>else ifeq &quot;<i class="dopln">výraz 1</i>&quot; &quot;<i class="dopln">výraz 2</i>&quot;</div>
<div class="radekzaklinadla" style="padding-left:2ch;"><i class="dopln">další alternativa</i><span class="volznak">]</span><span class="tritecky"></span></div>
<div class="radekzaklinadla"><span class="volznak">[</span>else</div>
<div class="radekzaklinadla" style="padding-left:2ch;"><i class="dopln">poslední alternativa</i><span class="volznak">]</span></div>
<div class="radekzaklinadla">endif</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#2 </span><span class="D">ᕚ</span>načíst kód Makefilu z jiných souborů, jako by byl zde</div><div class="radky">
<div class="radekzaklinadla">include <i class="dopln">soubory</i><span class="tritecky"></span></div>
</div></div>

<h3><a href="#cast3x10" id="cast3x10"><span class="cislo">10</span> Ostatní funkce</a></h3>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#1 </span><span class="D">䷂</span><b>vykonat příkaz</b> a rozvinout se na jeho výstup; konce řádků se nahradí mezerami</div><div class="radky">
<div class="radekzaklinadla">$(shell <i class="dopln">příkaz shellu</i>)</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#2 </span><span class="D">➧</span><b>vyvolat chybu</b> a ukončit zpracování Makefile<sup><a href="#kapmakeppc11" id="kapmakeppcr11" title="Tip: Popis chyby v parametru funkce $(error) může obsahovat rozvoj proměnných a volání funkcí.">(11)</a></sup></div><div class="radky">
<div class="radekzaklinadla">$(error <i class="dopln">popis chyby</i>)</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#3 </span><span class="D">⇈</span>vypsat varování/zprávu<sup><a href="#kapmakeppc12" id="kapmakeppcr12" title="Výsledkem expanze funkcí $(warning) a $(info) je prázdný řetězec.">(12)</a></sup></div><div class="radky">
<div class="radekzaklinadla">$(warning <i class="dopln">popis varování</i>)</div>
<div class="radekzaklinadla">$(info <i class="dopln">zpráva</i>)</div>
</div></div>

<h2><a href="#cast4" id="cast4"><span class="cislo">4.</span> Parametry příkazů</a></h2>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#1 </span><span class="D">⧔</span>make</div><div class="radky">
<div class="radekzaklinadla">make <span class="volznak">[</span><i class="dopln">parametry</i><span class="volznak">]</span> <span class="volznak">[</span><i class="dopln">cíl</i><span class="volznak">]</span><span class="tritecky"></span></div>
<div class="radekzaklinadla">$(MAKE) <span class="volznak">[</span><i class="dopln">parametry</i><span class="volznak">]</span> <span class="volznak">[</span><i class="dopln">cíl</i><span class="volznak">]</span><span class="tritecky"></span></div>
</div></div>
<ul class="kompaktni"><li><b>-j</b> <i class="dopln">počet</i> :: umožní paralelní běh více úloh najednou
</li><li><b>-C</b> <i class="dopln">adresář</i> :: před děláním čehokoliv (dokonce i hledání Makefilu) vstoupí do zadaného adresáře
</li><li><b>-n</b> :: nespouští příkazy, pouze je vypíše
</li><li><b>-s</b> :: nevypisuje příkazy, pouze je spouští
</li><li>Není-li cíl zadán, použije se první cíl v Makefile (tradičně akce „all“).
</li></ul>
<h2><a href="#cast5" id="cast5"><span class="cislo">5.</span> Instalace na Ubuntu</a></h2>
<div class="zaklinadlo"><div class="radky">
<div class="radekzaklinadla">sudo apt-get install make</div>
</div></div>

<h2><a href="#cast6" id="cast6"><span class="cislo">6.</span> Ukázka</a></h2>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#1 </span><span class="D">⨙</span>/home/elli/test/Makefile:</div><div class="radky">
<div class="radekzaklinadla"># Komentář</div>
<div class="radekzaklinadla">SHELL := /bin/sh</div>
<div class="radekzaklinadla">CXX := g++</div>
<div class="radekzaklinadla">CXXFLAGS := -Wall \</div>
<div class="radekzaklinadla">  -pedantic -DHOME=\&quot;$$HOME\&quot;</div>
<div class="radekzaklinadla">OBJS := main.o second.o</div>
<div class="radekzaklinadla">OBJS += hello.o</div>
<div class="radekzaklinadla">SOURCES := $(OBJS:%.o=%.cc)</div>
<div class="radekzaklinadla">.PHONY: all clean</div>
<div class="radekzaklinadla"></div>
<div class="radekzaklinadla">all: main</div>
<div class="radekzaklinadla">clean:</div>
<div class="radekzaklinadla"><span class="tab" style="width:8ch">&#9;</span>$(MAKE) -C lib clean</div>
<div class="radekzaklinadla"><span class="tab" style="width:8ch">&#9;</span>$(RM) $(OBJS)</div>
<div class="radekzaklinadla">main: $(OBJS)</div>
<div class="radekzaklinadla"><span class="tab" style="width:8ch">&#9;</span>@echo &quot;Koncové sestavení:&quot;</div>
<div class="radekzaklinadla"><span class="tab" style="width:8ch">&#9;</span>$(CXX) $(CXXFLAGS) -o $@ $^</div>
<div class="radekzaklinadla">main.o second.o: %.o: %.cc lib/hello.h</div>
<div class="radekzaklinadla"><span class="tab" style="width:8ch">&#9;</span>$(CXX) $(CXXFLAGS) -c -o $@ $&lt;</div>
<div class="radekzaklinadla">hello.o:</div>
<div class="radekzaklinadla"><span class="tab" style="width:8ch">&#9;</span>$(MAKE) -C lib hello.o</div>
<div class="radekzaklinadla"><span class="tab" style="width:8ch">&#9;</span>cp lib/hello.o $@</div>
</div></div>
<div class="zaklinadlo"><hr><div class="zahlavi"><span class="cislo">#2 </span><span class="D">ຄ</span>/home/elli/test/lib/Makefile:</div><div class="radky">
<div class="radekzaklinadla">.PHONY: clean</div>
<div class="radekzaklinadla">hello.o: hello.cc hello.h</div>
<div class="radekzaklinadla"><span class="tab" style="width:8ch">&#9;</span>g++ -o $@ -c -Wall -pedantic hello.cc</div>
<div class="radekzaklinadla">clean:</div>
<div class="radekzaklinadla"><span class="tab" style="width:8ch">&#9;</span>$(RM) hello.o</div>
</div></div>

<h2><a href="#cast7" id="cast7"><span class="cislo">7.</span> Tipy a zkušenosti</a></h2>
<ul><li>Dlouhé řádky Makefilu můžete rozdělit, pokud před každý konec řádku, který má make ignorovat, vložíte zpětné lomítko. Rozdělíte-li řádek s příkazem, make toto rozdělení předá volanému interpretu příkazové řádky, což však u běžně používaných „sh“ a „bash“ nezpůsobí problémy.
</li><li>Nebojte se definovat více cílů v jednom pravidle. Funguje to stejně jako definovat stejné pravidlo pro každý uvedený cíl zvlášť a ušetří vám to spoustu práce s údržbou. Ze stejného důvodu se vyplatí naučit se syntaxi pravidla s %-vzorem.
</li><li>Pro jeden cíl můžete definovat více pravidel, pokud nejvýše jedno z nich bude deklarovat příkazy; v takovém případě se automaticky sloučí zdroje ze všech odpovídajících pravidel.
</li><li>Program make v příkazech pravidel interpretuje znak $. Má-li se předat shellu, je třeba jej zdvojit, např. <b>$$PATH</b> nebo <b>$$$$</b>. To platí i při uzavření do apostrofů.
</li><li>Některé textové editory mohou v závislosti na svém nastavení nahrazovat tabulátory mezerami či naopak. Pokud takovým editorem upravíte Makefile, přestane fungovat, protože na začátku každého příkazu v pravidle musí být tabulátor, ne posloupnost mezer.
</li><li>Obvyklé názvy akcí jsou např.: all, clean, install.
</li><li>Každý příkaz pravidla se při kompilaci spouští ve vlastní instanci interpretu příkazové řádky!
</li><li>Použitý interpret v příkazech a volání funkce $(shell) určuje proměnná <b>SHELL</b>. Kvůli přenositelnosti se doporučuje ji na začátku Makefile výslovně nastavit: <b>SHELL := /bin/sh</b> nebo <b>SHELL := /bin/bash</b>.
</li><li>Akce může mít jako zdroje soubory a další akce; ty budou přeloženy před vykonáním vlastní akce.
</li></ul>
<h2><a href="#cast8" id="cast8"><span class="cislo">8.</span> Další zdroje informací</a></h2>
<ul class="kompaktni"><li><b>make --help</b>
</li><li><a href="https://www.sallyx.org/sally/c/linux/makefile">Makefile na sallyx.org</a>
</li><li><a href="https://cs.wikipedia.org/wiki/Make">Stránka na Wikipedii</a>
</li><li><a href="http://www.linux.cz/noviny/1999-0304/clanek12.html">Rychlo-školička pro Makefile</a>
</li><li><a href="http://www.fit.vutbr.cz/~martinek/clang/make.html">Správa projektů pomocí programu Make</a>
</li><li><a href="https://www.gnu.org/software/make/manual/make.html">Oficiální manuál GNU make</a> (anglicky)
</li><li><a href="http://manpages.ubuntu.com/manpages/bionic/en/man1/make.1.html">Manuálová stránka</a> (anglicky)
</li><li><a href="https://packages.ubuntu.com/bionic/make">Balíček Ubuntu Bionic Beaver</a> (anglicky)
</li><li><a href="https://www.gnu.org/software/make/">Oficiální stránka GNU make</a> (anglicky)
</li><li><a href="https://github.com/tldr-pages/tldr/blob/master/pages/common/make.md">TL;DR stránka „make“</a> (anglicky)
</li></ul>
<h2><a href="#cast9" id="cast9"><span class="cislo">9.</span> Snímek obrazovky</a></h2>
<figure><img src="obrazky/make.png" alt="(snímek obrazovky)"></figure><div class="ppc"><div id="kapmakeppc1"><a href="#kapmakeppcr1" class="cislopozn">1</a>&nbsp;„endef“ musí být na samostatném řádku; operátor může být „=“, „:=“ nebo „+=“.</div>
<script>document.write("<div class=\"zpetdotextu\" onclick=\"window.history.back()\">zpět do textu</div>");</script>
<div id="kapmakeppc2"><a href="#kapmakeppcr2" class="cislopozn">2</a>&nbsp;Třetí uvedená varianta provede náhradu jen ve slovech, kde odpovídá prefix i suffix. Slova, u kterých odpovídá jen prefix nebo jen suffix, projdou bez náhrady.</div>
<script>document.write("<div class=\"zpetdotextu\" onclick=\"window.history.back()\">zpět do textu</div>");</script>
<div id="kapmakeppc3"><a href="#kapmakeppcr3" class="cislopozn">3</a>&nbsp;Obecné pravidlo má nižší prioritu než všechna pevná a generovaná pravidla. Navíc je tiše ignorováno, pokud chybí nekterý ze zdrojů. Má-li uvedeno víc cílů, považují se po jeho provedení všechny uvedené cíle za vygenerované, a tedy se pravidlo nevolá pro překlad dalších zdrojů znovu.</div>
<script>document.write("<div class=\"zpetdotextu\" onclick=\"window.history.back()\">zpět do textu</div>");</script>
<div id="kapmakeppc4"><a href="#kapmakeppcr4" class="cislopozn">4</a>&nbsp;Uvedený příklad předpokládá předdefinované proměnné CXX a CXXFLAGS, které GNU make předdefinovává, takže je nemusíte sami nastavovat.</div>
<script>document.write("<div class=\"zpetdotextu\" onclick=\"window.history.back()\">zpět do textu</div>");</script>
<div id="kapmakeppc5"><a href="#kapmakeppcr5" class="cislopozn">5</a>&nbsp;Poznámka: nepovinné zdroje se zadávají jako vzorky interpretu oddělené mezerami, což znamená, že „?“, „*“ a „<span class="viditelnamezera">&nbsp;</span>“ jsou v nich znaky se speciální významem.</div>
<script>document.write("<div class=\"zpetdotextu\" onclick=\"window.history.back()\">zpět do textu</div>");</script>
<div id="kapmakeppc6"><a href="#kapmakeppcr6" class="cislopozn">6</a>&nbsp;Při použití poslední uvedené varianty nesmějí text-před a text-za obsahovat znak %.</div>
<script>document.write("<div class=\"zpetdotextu\" onclick=\"window.history.back()\">zpět do textu</div>");</script>
<div id="kapmakeppc7"><a href="#kapmakeppcr7" class="cislopozn">7</a>&nbsp;Neobsahuje-li slovo žádné „/“, vrací pro něj $(dir) „./“.</div>
<script>document.write("<div class=\"zpetdotextu\" onclick=\"window.history.back()\">zpět do textu</div>");</script>
<div id="kapmakeppc8"><a href="#kapmakeppcr8" class="cislopozn">8</a>&nbsp;Pozor! Slova, která takovou příponu neobsahují, budou touto funkcí vynechána bez náhrady, což sníží počet slov ve výsledném řetězci.</div>
<script>document.write("<div class=\"zpetdotextu\" onclick=\"window.history.back()\">zpět do textu</div>");</script>
<div id="kapmakeppc9"><a href="#kapmakeppcr9" class="cislopozn">9</a>&nbsp;Vzorek příkazového interpretu může obsahovat znaky ? a * s významem obvyklým v bashi. Pokud vzorku neodpovídá žádný soubor ani adresář, vzorek se potichu přeskočí. Toho je možno použít k vynechání neexistujících souborů z proměnné.</div>
<script>document.write("<div class=\"zpetdotextu\" onclick=\"window.history.back()\">zpět do textu</div>");</script>
<div id="kapmakeppc10"><a href="#kapmakeppcr10" class="cislopozn">10</a>&nbsp;Vybere první z alternativ, kde jsou si uvedené výrazy po rozvinutí rovny. Doporučuji alternativy v Makefilu odsadit, ale není to vyžadováno.</div>
<script>document.write("<div class=\"zpetdotextu\" onclick=\"window.history.back()\">zpět do textu</div>");</script>
<div id="kapmakeppc11"><a href="#kapmakeppcr11" class="cislopozn">11</a>&nbsp;Tip: Popis chyby v parametru funkce $(error) může obsahovat rozvoj proměnných a volání funkcí.</div>
<script>document.write("<div class=\"zpetdotextu\" onclick=\"window.history.back()\">zpět do textu</div>");</script>
<div id="kapmakeppc12"><a href="#kapmakeppcr12" class="cislopozn">12</a>&nbsp;Výsledkem expanze funkcí $(warning) a $(info) je prázdný řetězec.</div>
<script>document.write("<div class=\"zpetdotextu\" onclick=\"window.history.back()\">zpět do textu</div>");</script>
</div>
<div class="odkazydole"><a href="datum-cas-kalendar.htm"><img src="obrazky/ik-vychozi.png" alt="" width="32" height="32">Datum, čas a kalendář</a><a href="awk.htm"><img src="obrazky/ik/awk.png" alt="" width="32" height="32">AWK</a><a href="zpracovani-videa-a-zvuku.htm"><img src="obrazky/ik-vychozi.png" alt="" width="32" height="32">Zpracování videa a zvuku</a></div>

<nav class="spodni"><span class="prev">
<a href="git.htm" rel="prev" title="6. Git">Předchozí&nbsp;kapitola</a>&nbsp;|
</span><a href="index.htm">Přehled</a><span class="next"><!--
-->&nbsp;| <a href="markdown.htm" rel="next" title="8. Markdown">Následující&nbsp;kapitola</a>
</span>
<a href="#nahore" id="odkaznahoru" title="NAHORU − na začátek stránky">▴<!--⤒--></a>
<a href="#dole" id="odkazdolu" title="DOLŮ − na konec stránky">▾<!--⤓--></a>
</nav>


</article>
<footer id="dole">
<img src="obrazky/by-sa.png" width="88" height="31" alt="[BY-SA]">
<p>Veškerý obsah této stránky (text, obrázky, zdrojový kód) je možno upravovat a šířit pod podmínkami licence
<a href="https://creativecommons.org/licenses/by-sa/4.0/">Creative Commons Attribution-ShareAlike 4.0 International</a>.
Upozorňuji, že uvedená licence vyžaduje uvedení seznamu autorů, licence a zdroje a poskytnutí stejné
či kompatibilní licence k provedeným změnám, jsou-li nějaké. Příslušné údaje jsou dostupné
na stránce „<a href="x-autori.htm">Přehled autorů</a>“.
Šíření obsahu bez těchto údajů nebo šíření upravené verze bez poskytnutí adekvátní
licence k provedeným úpravám je pravděpodobně porušení licenčních podmínek a může být postihováno.
Poskytování zdrojového kódu při šíření není touto licencí vyžadováno.</p><p>Pro nové verze, další informace, aktuální zdrojový kód
a možnost se zapojit do projektu „Linux: Kniha kouzel“ navštivte jeho
<a href="https://github.com/singularis-mzf/linux-spellbook">repozitář na GitHubu</a>.
</footer>
</body>
</html>
